//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACESessionManager
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogonRequest", Namespace="http://schemas.datacontract.org/2004/07/ACE.Entities")]
    public partial class LogonRequest : object
    {
        
        private string UsernameField;
        
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://schemas.datacontract.org/2004/07/ACE.Entities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ACESessionManager.LogoutResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ACESessionManager.LogonResponse))]
    public partial class ResponseBase : object
    {
        
        private string ExceptionMessageField;
        
        private long NSProcessTimeField;
        
        private long ProcessTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage
        {
            get
            {
                return this.ExceptionMessageField;
            }
            set
            {
                this.ExceptionMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NSProcessTime
        {
            get
            {
                return this.NSProcessTimeField;
            }
            set
            {
                this.NSProcessTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessTime
        {
            get
            {
                return this.ProcessTimeField;
            }
            set
            {
                this.ProcessTimeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogoutResponse", Namespace="http://schemas.datacontract.org/2004/07/ACE.Entities")]
    public partial class LogoutResponse : ACESessionManager.ResponseBase
    {
        
        private bool IsLogoutField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLogout
        {
            get
            {
                return this.IsLogoutField;
            }
            set
            {
                this.IsLogoutField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogonResponse", Namespace="http://schemas.datacontract.org/2004/07/ACE.Entities")]
    public partial class LogonResponse : ACESessionManager.ResponseBase
    {
        
        private string SessionIDField;
        
        private string UsernameField;
        
        private int SessionTimeoutIntervalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID
        {
            get
            {
                return this.SessionIDField;
            }
            set
            {
                this.SessionIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int SessionTimeoutInterval
        {
            get
            {
                return this.SessionTimeoutIntervalField;
            }
            set
            {
                this.SessionTimeoutIntervalField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ACESessionManager.ISessionService")]
    public interface ISessionService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/Logon", ReplyAction="http://tempuri.org/ISessionService/LogonResponse")]
        System.Threading.Tasks.Task<ACESessionManager.LogonResponse> LogonAsync(ACESessionManager.LogonRequest logonRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/Logout", ReplyAction="http://tempuri.org/ISessionService/LogoutResponse")]
        System.Threading.Tasks.Task<ACESessionManager.LogoutResponse> LogoutAsync(string sessionID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface ISessionServiceChannel : ACESessionManager.ISessionService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class SessionServiceClient : System.ServiceModel.ClientBase<ACESessionManager.ISessionService>, ACESessionManager.ISessionService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SessionServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(SessionServiceClient.GetBindingForEndpoint(endpointConfiguration), SessionServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SessionServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SessionServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ACESessionManager.LogonResponse> LogonAsync(ACESessionManager.LogonRequest logonRequest)
        {
            return base.Channel.LogonAsync(logonRequest);
        }
        
        public System.Threading.Tasks.Task<ACESessionManager.LogoutResponse> LogoutAsync(string sessionID)
        {
            return base.Channel.LogoutAsync(sessionID);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.basicHttpSessionService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.basicHttpsSessionService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.basicHttpSessionService))
            {
                return new System.ServiceModel.EndpointAddress("http://win-vf2ibk72ko6/ACE/SessionService.svc");
            }
            if ((endpointConfiguration == EndpointConfiguration.basicHttpsSessionService))
            {
                return new System.ServiceModel.EndpointAddress("https://stgace.airasia.com/ACE/SessionService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            basicHttpSessionService,
            
            basicHttpsSessionService,
        }
    }
}
